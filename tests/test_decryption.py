 # pylint: disable=line-too-long
from custom_components.candy.client.decryption import find_key


def test_find_key_1():
    response = bytes.fromhex("""

""")
    key = find_key(response)

    assert key == "fbfjlbmmfklfaikm"


def test_find_key_2():
    response = bytes.fromhex("""

""")
    key = find_key(response)

    assert key == "TqaM9Jxh8I1MmcGA"


def test_find_key_error():
    response = bytes.fromhex("""

""")
    key = find_key(response)

    assert key is None
